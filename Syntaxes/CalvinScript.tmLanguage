<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>calvin</string>
	</array>
	<key>name</key>
	<string>CalvinScript</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>match</key>
			<string>^\s*</string>
			<key>name</key>
			<string>meta.whitespace.leading</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#constdef</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#include_stmt</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#component</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#block</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#invalid</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>argument</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_raw</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.calvinjson</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable</string>
				</dict>
			</array>
		</dict>
		<key>block</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#deployscript</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#instance</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#port_property</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#link</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#invalid</string>
				</dict>
			</array>
		</dict>
		<key>block_compdef</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#docstring</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#instance</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#link_comp</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#invalid</string>
				</dict>
			</array>
		</dict>
		<key>comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment_block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment_shebang</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment_line</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment_line_deprecated</string>
				</dict>
			</array>
		</dict>
		<key>comment_block</key>
		<dict>
			<key>begin</key>
			<string>\s*/\*</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.begin</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\*/</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.end</string>
				</dict>
			</dict>
			<key>name</key>
			<string>comment.block</string>
		</dict>
		<key>comment_line</key>
		<dict>
			<key>begin</key>
			<string>\s*#</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\n</string>
			<key>name</key>
			<string>comment.line.number-sign</string>
		</dict>
		<key>comment_line_deprecated</key>
		<dict>
			<key>begin</key>
			<string>\s*//</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\n</string>
			<key>name</key>
			<string>comment.line.double-slash</string>
		</dict>
		<key>comment_shebang</key>
		<dict>
			<key>begin</key>
			<string>^#!</string>
			<key>end</key>
			<string>\n</string>
			<key>name</key>
			<string>comment.line.number-sign.shebang</string>
		</dict>
		<key>comp_signature_def</key>
		<dict>
			<key>begin</key>
			<string>([\p{Alpha}_][\p{Alnum}_]*)\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Can I use lookahead to end in order not to consume? Yes.</string>
			<key>end</key>
			<string>(?=\))</string>
			<key>name</key>
			<string>meta.function</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#parameter</string>
				</dict>
			</array>
		</dict>
		<key>component</key>
		<dict>
			<key>begin</key>
			<string>^\s*(component)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>How can I run patterns inside of the beginCapture? Not possible.</string>
			<key>end</key>
			<string>}</string>
			<key>name</key>
			<string>meta.component</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comp_signature_def</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#port_def</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block_compdef</string>
				</dict>
			</array>
		</dict>
		<key>constdef</key>
		<dict>
			<key>begin</key>
			<string>^\s*(define)\s+([\p{Alpha}_][\p{Alnum}_]*)\s*(=)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.constant</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#argument</string>
				</dict>
			</array>
		</dict>
		<key>deployscript</key>
		<dict>
			<key>begin</key>
			<string>\s*((?:rule)|(?:group)|(?:apply(?:\s*\*)?))\s*</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>rule\s+(?=[a-zA-Z_0-9,\s]+:)</string>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>meta.deployscript</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>[:,\s]*</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#predicate</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#id_list</string>
				</dict>
			</array>
		</dict>
		<key>docstring</key>
		<dict>
			<key>begin</key>
			<string>\s*"""</string>
			<key>end</key>
			<string>"""</string>
			<key>name</key>
			<string>string.quoted.triple</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
			</array>
		</dict>
		<key>escaped_char</key>
		<dict>
			<key>match</key>
			<string>\\.</string>
			<key>name</key>
			<string>constant.character.escape</string>
		</dict>
		<key>id_list</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.other.calvin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.other.calvin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>([a-zA-Z_0-9]+)(?:\s*,\s*([a-zA-Z_0-9]+))*</string>
		</dict>
		<key>include_stmt</key>
		<dict>
			<key>begin</key>
			<string>^\s*(include)\s+([^\s/\\:\*\?]+)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment_line</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#invalid</string>
				</dict>
			</array>
		</dict>
		<key>inport_comp_list</key>
		<dict>
			<key>begin</key>
			<string>(&gt;)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=$)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>//</string>
					<key>name</key>
					<string>invalid</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#transform</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#port</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#voidport</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#link_comp_port</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\s*(,)\s*(?=[A-Za-z]\.)</string>
				</dict>
			</array>
		</dict>
		<key>inport_list</key>
		<dict>
			<key>begin</key>
			<string>(&gt;)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=$)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>//</string>
					<key>name</key>
					<string>invalid</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#transform</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#port</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#voidport</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\s*(,)\s*(?=[A-Za-z])</string>
				</dict>
			</array>
		</dict>
		<key>instance</key>
		<dict>
			<key>begin</key>
			<string>^\s*([\p{Alpha}_][\p{Alnum}_]*)\s*(:)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.other.calvin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#qualified_actor</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#named_param</string>
				</dict>
			</array>
		</dict>
		<key>invalid</key>
		<dict>
			<key>match</key>
			<string>\S.*</string>
			<key>name</key>
			<string>invalid</string>
		</dict>
		<key>label</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.definition.decorator.calvin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.definition.label.calvin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\s*(:)([\p{Alpha}_][\p{Alnum}_])*\s+</string>
		</dict>
		<key>labeled_argument</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#label</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#argument</string>
				</dict>
			</array>
		</dict>
		<key>link</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#link_left</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#link_right</string>
				</dict>
			</array>
		</dict>
		<key>link_comp</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#link_left</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#link_comp_port</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#link_comp_right</string>
				</dict>
			</array>
		</dict>
		<key>link_comp_port</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.decorator</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.other.calvin</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.constant</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>aliased inport</string>
			<key>match</key>
			<string>\s*(\.[\p{Alpha}_][\p{Alnum}_]*)\s*</string>
		</dict>
		<key>link_comp_right</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#inport_comp_list</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#invalid</string>
				</dict>
			</array>
		</dict>
		<key>link_left</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#port</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#voidport</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#labeled_argument</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#argument</string>
				</dict>
			</array>
		</dict>
		<key>link_right</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#inport_list</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#invalid</string>
				</dict>
			</array>
		</dict>
		<key>named_param</key>
		<dict>
			<key>begin</key>
			<string>([\p{Alpha}_][\p{Alnum}_]*)\s*(=)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.parameter</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(,|(?=\)))</string>
			<key>name</key>
			<string>meta.function-call.arguments</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#argument</string>
				</dict>
			</array>
		</dict>
		<key>parameter</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.parameter</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\s*([A-Za-z_][A-Za-z0-9_]*)\s*</string>
		</dict>
		<key>port</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.other.calvin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.constant</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\s*([\p{Alpha}_][\p{Alnum}_]*)\.([\p{Alpha}_][\p{Alnum}_]*)\s*</string>
			<key>name</key>
			<string>meta.port</string>
		</dict>
		<key>port_def</key>
		<dict>
			<key>begin</key>
			<string>\)</string>
			<key>end</key>
			<string>\{</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#portname</string>
				</dict>
				<dict>
					<key>match</key>
					<string>-&gt;</string>
					<key>name</key>
					<string>keyword</string>
				</dict>
			</array>
		</dict>
		<key>port_property</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#port</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#property</string>
				</dict>
			</array>
		</dict>
		<key>portname</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.decorator</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\s*([A-Za-z_][A-Za-z0-9_]*)\s*</string>
		</dict>
		<key>predicate</key>
		<dict>
			<key>begin</key>
			<string>\s*([a-zA-Z_0-9]+))(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.function-call</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.predicate</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#named_param</string>
				</dict>
			</array>
		</dict>
		<key>property</key>
		<dict>
			<key>begin</key>
			<string>((\[\s*(?:in|out)\s*\]))(\()|(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.port.direction</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.decorator</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.decorator</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.decorator</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.decorator</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.port.property</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#named_param</string>
				</dict>
			</array>
		</dict>
		<key>qualified_actor</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.type.calvin</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>support.class.calvin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\s*(((?:[\p{Alpha}_][\p{Alnum}_]*\.)*)([\p{Alpha}_][\p{Alnum}_]*))\s*\(</string>
		</dict>
		<key>string_raw</key>
		<dict>
			<key>begin</key>
			<string>!"</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.double.raw</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
			</array>
		</dict>
		<key>transform</key>
		<dict>
			<key>begin</key>
			<string>(/)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.decorator</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.decorator</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.port.transform</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#labeled_argument</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#argument</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#invalid</string>
				</dict>
			</array>
		</dict>
		<key>variable</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\s*([A-Za-z_][A-Za-z0-9_]*)\s*</string>
		</dict>
		<key>voidport</key>
		<dict>
			<key>match</key>
			<string>\bvoidport\b</string>
			<key>name</key>
			<string>keyword</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.calvin</string>
	<key>uuid</key>
	<string>EF67D759-EB8D-4092-9641-B0E97A93AF7F</string>
</dict>
</plist>
